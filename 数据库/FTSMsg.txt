FTSMsg.db
CREATE VIRTUAL TABLE FTSChatMsg2 USING fts4(content,entityId,notindexed=entityId,tokenize=mmTokenizer "porter")
CREATE TABLE 'FTSChatMsg2_content'(docid INTEGER PRIMARY KEY, 'c0content', 'c1entityId')
CREATE TABLE 'FTSChatMsg2_segments'(blockid INTEGER PRIMARY KEY, block BLOB)
CREATE TABLE 'FTSChatMsg2_segdir'(level INTEGER,idx INTEGER,start_block INTEGER,leaves_end_block INTEGER,end_block INTEGER,root BLOB,PRIMARY KEY(level, idx))
(null)
CREATE TABLE 'FTSChatMsg2_docsize'(docid INTEGER PRIMARY KEY, size BLOB)
CREATE TABLE 'FTSChatMsg2_stat'(id INTEGER PRIMARY KEY, value BLOB)
CREATE TABLE FTSChatMsg2_MetaData(docid INTEGER PRIMARY KEY, msgId INTEGER, entityId INTEGER,type INTEGER, subType INTEGER, tableType INTEGER, sortSequence INTEGER)
CREATE INDEX FTSChatMsg2_idSeqIdx ON FTSChatMsg2_MetaData (docid, msgId, sortSequence)
CREATE INDEX FTSChatMsg2_entityIdIdxName ON FTSChatMsg2_MetaData (docid, entityId, sortSequence)
CREATE INDEX FTSChatMsg2_typeIdxName ON FTSChatMsg2_MetaData (docid, type, sortSequence)
CREATE INDEX FTSChatMsg2_subTypeIdxName ON FTSChatMsg2_MetaData (docid, subType, sortSequence)
CREATE INDEX FTSChatMsg2_idOnlyIdx ON FTSChatMsg2_MetaData (entityId)
CREATE INDEX FTSChatMsg2_msgTalbeIdx ON FTSChatMsg2_MetaData (msgId, tableType)
CREATE TABLE NameToId (								userName TEXT PRIMARY KEY)
(null)
CREATE TABLE DBTableInfo (							tableIndex INTEGER PRIMARY KEY,							tableVersion INTERGER,							tableDesc TEXT)
CREATE INDEX versionIdx ON DBTableInfo(tableIndex)
